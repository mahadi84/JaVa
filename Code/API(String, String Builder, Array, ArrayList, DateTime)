

================================== String =====================================
    
         String name= "Mahadi"; 

        //----
        // String str1 = "Hello";
        // str1 = str1 + " World"; 
        // System.out.println(str1);

        // String str2 = "Hello";
        // String str3 = name.concat(str2).length(); //** Why copilation error.
        // System.out.println(str3);
        //----


        //  System.out.println(name.length());
        //  System.out.println(name.charAt(000));
        //  System.out.println(name.indexOf("z"));
        //  System.out.println(name.lastIndexOf("i"));
        
        // System.out.println(name.substring(1));
        // System.out.println(name.substring(1, 2));
        // System.out.println(name.substring(1, 1));
        
        // System.out.println(name.replace("dii", "R"));
        //  System.out.println(name.concat("_Z"));         
        //  System.out.println(name.contains("hadiz"));

        //  System.out.println(name.equals("mahadi"));
        //  System.out.println(name.equalsIgnoreCase("mahadi"));


        //  System.out.println(name.toUpperCase());
        //  System.out.println(name.toLowerCase());
        
        // char[] c= name.toCharArray();  //Converts the string to a new character array.
        // System.out.println(c[0]);
        
        // //  valueOf(Object obj): Returns the string representation of the specified object.
        // String numStr = String.valueOf(123); // numStr will be "123"
        //  System.out.println(numStr.toLowerCase());
        
        
======================================== StringBuilder  =======================================
        
        // StringBuilder sb= new StringBuilder();
        // int capacity = sb.capacity(); // Initial capacity is usually 16
        // sb.ensureCapacity(100); // Makes sure the capacity is at least 100
                // sb.append(" abc");
                // sb.append(" 123").insert(0, "Hello ").setCharAt(0, 'h');

                // System.out.println(sb.length());
                // System.out.println(sb.charAt(000));
                // System.out.println(sb.indexOf("h"));
                // System.out.println(sb.lastIndexOf("h"));

                // System.out.println(sb.substring(2)); //is there any difference form String?
                // System.out.println(sb.substring(100));
                // System.out.println(sb.substring(1,100));
                // System.out.println(sb.substring(1,1));
                
                // System.out.println(sb.deleteCharAt(1)); //**
                // System.out.println(sb.delete(1,1)); //**
                
                // System.out.println(sb.reverse()); 

                // String result = sb.toString(); //Converts the StringBuilder object to a String object.
                // System.out.println(result);



===================================== Array ==========================================

        // ------------- One Dimentional ------------
        // int[] iA= new int[1];  //[tray icon, indicate an array]
        // int[] iA = {1, 2, 3};
        // iA[0] = 1;


        // ------------- Two Dimentional ------------
        // char[][] cA2= {{'A', 'B', 'C'}, {'D', 'E', 'F'}}; //table with 2 rows and 3 columns
        // char[][] cA= new char[no_of_rows][no_of_cols];
        // char[][] cA= new char[3][3];
        // cA[0][0]= 'A';
        // cA[0][1]= 'B'; //Is it Ok?

        // ------------- Three Dimentional ------------
        // Imagine a 3D array representing a building with floors, rows, and columns(perhaps representing rooms):
            // int[][][] building = new int[no_of_floors][no_of_rows][no_of_column/rooms]; 

        String[][][] building= new String[1][1][1];
                        building[0][0][0]= "String Array";


// PRINT ARRAY DATA ** []=1_for_loop, [][]=2_for_loop, [][][]= 3_for_loop

        // Iterating through the array
            for (int i = 0; i < building.length; i++) { 
                for (int j = 0; j < building[i].length; j++) {
                    for (int k = 0; k < building[i][j].length; k++) {
                        System.out.print(building[i][j][k] + " ");
                    }
                System.out.println();            
                }
                System.out.println(); 
            }









-
