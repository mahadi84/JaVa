

00. What is an Array?
01. How to print a One_,Two_,&_Three dimensional Array?
02. How do you search data in an array (linear, binary, stream search)?


======================= 00. What is an Array? ========================
-Special Variable holds multiple data. int[] a= {1,2}, int[][]a={{1,2},{3,4}},
-Fixed Size, No need to set Array size like [1] while declaring.
-Element is Non-Add/Edit/Removable
-Arrays.length shows Array length

[]    = to print data  needs one "for-loop"
[][]  = to print data  needs two "for-loop"
[][][]= to print data  needs three "for-loop"

 
--------------------------One Dimension []----------------------------
String[] oneD = {"a ", "b ", "c ","d "};
       ######## for(int i=0; i<oneD.length; i++){            
                    System.out.print(oneD[i]);
                   }
       #######For-Each Loop:
              for (String e : oneD) {  
                     System.out.println(e);
               }

      #######While      
              int i=0;
              while (i<oneD.length){
                  System.out.println(oneD[i]);
                  i++;
              }


---------------------- Two-dimensional [][] Store more than one array data ---------------------------
##Example: 01
        // int v[][] = new int[No.of.Row/Arr][Length/Size/Field of Row];
        int v[][] = new int[1][2]; //
        v[0][0]= 1;
        v[0][1]= 2;
        
            for(int i=0; i<1; i++){               //i<v.length    | No.of.Row/Arr
                for(int j=0; j<2; j++){           //j<j[i].length | Length/Size/Field of Row
                    System.out.println(v[i][j]);
                }
            }
          ----for-each ----
            for (int[] is : v) {
                for (int is2 : is) {
                    System.out.println(is2);
                }
            }
         


##Example: 02
int[][] twoDimenArr = { {1, 2, 3},{4, 5, 6},{7, 8, 9} };

########For Loop:
        for (int i = 0; i < twoDimenArr.length; i++) { // Loop through each row
            for (int j = 0; j < twoDimenArr[i].length; j++) { // Loop through each column in the current row
                System.out.print(twoDimenArr[i][j] + " ");
            }
            System.out.println(); // Move to the next line after printing each row
        }

#######For-Each Loop:
       for (int[] row : twoDimenArr) {
            for (int element : row) {                
                System.out.print(element);
            }
        System.out.println();
        }

        
------------------------Three Dimension [][][][]-----------------------------------
String[][][] threeD = {{{"aa ","aa-2 ", "aa-3"},{"bb ","bb-2 ", "bb-3 "}},{{"cc ","cc-1 ", "cc-3 "},{"dd ","dd-1 ", "dd-2"}}};	
        for(int i=0; i<threeD.length; i++){
            for(int j=0; j<threeD[i].length; j++){
                for(int k=0; k<threeD[i][j].length; k++){
                    System.out.print(threeD[i][j][k]);
                }
                System.out.println();
            }
            System.out.println();
        }




==================== 02. How to Search data in an array? ====================
**Arrays.sort(a);

import java.util.*;

public class Learning{
    public int findArrayData(int[] a, int key){
        for(int i=0; i<a.length; i++){
            if(a[i]==key){
                return i;
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        // int[] a= new int[] {1,2,3,4,5};
        int[] a= {1,9,3,1,5};
        int key =5;

        //Liner Search
        //for small or unsorted arrays,Result-Start-counting: 1
       Learning d= new Learning();
       System.out.println(d.findArrayData(a,key));

        //Binary Search
        //for large, sorted arrays for faster performance,Result-start-counting: 0
        Arrays.sort(a);
        int i= Arrays.binarySearch(a, key);
        System.out.println(i);

        //Stream Search, more modern and functional approach, Result: true/false
        boolean found = Arrays.stream(a).anyMatch(x -> x == key);
        System.out.println("Element found: " + found);
    }
}

---------
