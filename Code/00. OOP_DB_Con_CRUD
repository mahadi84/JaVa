

================= DB_Connection, getConnection, closeConnction =====================
        import java.sql.*;
        public class DatabaseConnection {
            private Connection connection;
            public DatabaseConnection() throws SQLException {
                // Replace placeholders with your database credentials
                String jdbcURL="jdbc:mysql:///java_bms";
                String username="root";
                String password="Mahadi@123";
                try{
                    connection = DriverManager.getConnection(jdbcURL, username, password);
                }catch( Exception e){
                    System.out.println(e);
                }
            }
        
            public Connection getConnection() {
                return connection;
            }
        
            public void closeConnection() throws SQLException {
                if (connection != null) {
                    connection.close();
                }
            }
        }

================= Customer (Getter and Setter) =====================
      public class Customer {
          private int id;
          private String name;
          private String email;
          private String address;
      
          // Getters 
          public int getId() {return id; }
          public String getName() {return name; }
          public String getEmail() {return email; }
          public String getAddress() {return address; }
      
          //Setters
          public void setId(int id) {this.id=id; }
          public void setName(String name) {this.name=name; }
          public void setEmail(String email) {this.email=email; }
          public void setAddress(String address) {this.address=address; }
      }
==================== CustomerCRUD ========================
          import java.sql.*;
          import java.util.ArrayList;
          import java.util.List;
          
          public class CustomerCRUD {
              private DatabaseConnection databaseConnection;
          
              public CustomerCRUD(DatabaseConnection databaseConnection) {
                  this.databaseConnection = databaseConnection;
              }
          
              // Create a new customer
              public void createCustomer(Customer customer) throws SQLException {
                  String query = "INSERT INTO customers (name, email, address) VALUES (?, ?, ?)";
                  PreparedStatement statement = databaseConnection.getConnection().prepareStatement(query);
                  statement.setString(1, customer.getName());
                  statement.setString(2, customer.getEmail());
                  statement.setString(3, customer.getAddress());
                  statement.executeUpdate();
                  statement.close();
              }
          
              // Read all customers
              public List<Customer> readAllCustomers() throws SQLException {
                  List<Customer> customers = new ArrayList<>();
                  String query = "SELECT id, name, email, address FROM customers";
                  PreparedStatement statement = databaseConnection.getConnection().prepareStatement(query);
                  ResultSet resultSet = statement.executeQuery();
                  while (resultSet.next()) {
                      Customer customer = new Customer();
                      customer.setId(resultSet.getInt("id"));
                      customer.setName(resultSet.getString("name"));
                      customer.setEmail(resultSet.getString("email"));
                      customer.setAddress(resultSet.getString("address"));
                      customers.add(customer);
                  }
                  resultSet.close();
                  statement.close();
                  return customers;
              }
          
              // Update a customer
              public void updateCustomer(Customer customer) throws SQLException {
                  String query = "UPDATE customers SET name = ?, email = ?, address = ? WHERE id = ?";
                  PreparedStatement statement = databaseConnection.getConnection().prepareStatement(query);
                  statement.setString(1, customer.getName());
                  statement.setString(2, customer.getEmail());
                  statement.setString(3, customer.getAddress());
                  statement.setInt(4, customer.getId());
                  System.out.println(statement);
                  statement.executeUpdate();
                  statement.close();
              }
          
              // Delete a customer
              public void deleteCustomer(int customerId) throws SQLException {
                  String query = "DELETE FROM customers WHERE id = ?";
                  PreparedStatement statement = databaseConnection.getConnection().prepareStatement(query);
                  statement.setInt(1, customerId);
                  statement.executeUpdate();
                  statement.close();
              }
          }

=========================== Main() like CURD FORM==================
    import java.sql.*;
    import java.util.List;
    
    public class Main {
        public static void main(String[] args) throws SQLException {
            DatabaseConnection databaseConnection = new DatabaseConnection();
            CustomerCRUD customerCRUD = new CustomerCRUD(databaseConnection);
    
            Customer customer = new Customer();        
            
            // Create a new customer
                customer.setName("Muhammad Labib Hasan");
                customer.setEmail("labib@gmail.com");
                customer.setAddress("Mirpur-01, Dhaka");
                customerCRUD.createCustomer(customer);
    
            // Read all customers
            List<Customer> customers = customerCRUD.readAllCustomers();
                    for (Customer customerr : customers) {
                        System.out.println("Name: "+customerr.getName());
                        System.out.println("Email: "+ customerr.getEmail());
                        System.out.println("Address: "+ customerr.getAddress());
                        System.out.println("-----------");
                    }
    
            // Update a customer
                customer.setId(1);
                customer.setName("Arifuzzaman");
                customer.setEmail("arif@gmail.com");
                customer.setAddress("Kamlapur, Dhaka");
                customerCRUD.updateCustomer(customer);
    
            // // Delete a customer
                customerCRUD.deleteCustomer(customer.getId());
    
            databaseConnection.closeConnection();
        }
    }

============================ SQL =================================

CREATE DATABASE java_crud

CREATE TABLE `customers` (
  `id` int(20) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `address` varchar(100) NOT NULL,
 
)

======================== Database Connectivity Library =========================
Download: https://dev.mysql.com/downloads/connector/j/

VS_CODE(Left-Bottom): 
Click on "JAVA PROJECTS" >Click on PROJECT NAME > Click on "(+)Reference Libraries" >Select the driver just downloaded
-That's it.






-
