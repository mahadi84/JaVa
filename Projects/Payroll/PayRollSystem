import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;

public class PayRollSystem {
   
    private DatabaseConnection connection;
    public PayRollSystem(DatabaseConnection connection) {
        this.connection= connection;        
    }

    public void addEmployee(Employee e) throws SQLException {
       
        String query= "INSERT INTO employees (employee_id, employee_name, employee_type, monthly_salary, hourly_rate, hours_worked) " +
                "VALUES (?, ?, ?, ?, ?, ?)";

        try (PreparedStatement statement = connection.getConnection().prepareStatement(query)) {

            statement.setInt(1, e.getEmpId());
            statement.setString(2, e.getEmpName());

            if (e instanceof FullTimeEmployee) {
                statement.setString(3, "FullTime");
                statement.setDouble(4, ((FullTimeEmployee) e).getMonthlySalary());
                statement.setNull(5, Types.DECIMAL); 
                statement.setNull(6, Types.INTEGER);
            } else if (e instanceof PartTimeEmployee) {
                statement.setString(3, "PartTime");
                statement.setNull(4, Types.DECIMAL);
                statement.setDouble(5, ((PartTimeEmployee) e).getHourlyRate());
                statement.setInt(6, ((PartTimeEmployee) e).getHoursWorked());
            } else {
                throw new IllegalArgumentException("Unsupported employee type");
            }

            statement.executeUpdate();

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }


    public void removeEmployee(int removeEmpWithId) {
        try ( PreparedStatement statement = connection.getConnection().prepareStatement(
                     "DELETE FROM employees WHERE id = ?")) {

            statement.setInt(1, removeEmpWithId);
            statement.executeUpdate();

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    public void displayEmployee() {
        String query="SELECT * FROM employees";
        try ( PreparedStatement preparedStatement = connection.getConnection().prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery()){

            while (resultSet.next()) {
                int emp_id = resultSet.getInt("employee_id");
                String emp_name = resultSet.getString("employee_name");
                String employeeType = resultSet.getString("employee_type");
                double salary = 0.0;

                if ("FullTime".equals(employeeType)) {
                    salary = resultSet.getDouble("monthly_salary");
                } else if ("PartTime".equals(employeeType)) {
                    double hourlyRate = resultSet.getDouble("hourly_rate");
                    int hoursWorked = resultSet.getInt("hours_worked");
                    salary = hourlyRate * hoursWorked;
                }

                System.out.println("Employee [Empolyee ID= " + emp_id + ", Employee Name= " + emp_name + ", salary= " + salary + "]");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}



-
