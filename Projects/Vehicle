Date: 20 Oct 2024


Objective:
   - Use of Class inheritance
   - Parent Class "Vehicle", setDirection(), move(), stop() 
   - Child Class "Car"  changeGear(), ChangeSpeed()
   - Create  BMW extends Car


-------------------------------------------------------------------------------------------------------------
            Propertise             |             Behaviour()                       | getter() and setter()
-------------------------------------------------------------------------------------------------------------
Vehicle  | name, speed, direction  | contructor(), setDirection(), move(), stop()  
--------------------------------------------------------------------------------------------------------------
Car      |  wheel, dorrs, gear, currentGear, type, isManual  | contructor(),changeGear(), ChangeSpeed()  
-------------------------------------------------------------------------------------------------------------
BMW      |       ----              | contructor(),accelerate()
-------------------------------------------------------------------------------------------------------------


======================== Main ===========================================

public class Main {

    public static void main(String[] args) {
        Bmw b= new Bmw("BMW", false);

        b.move(40,0);
        b.accelerate(55);

        System.out.println("Current Gear: "+ b.getCurrentGear());
        System.out.println("Current Speed: "+ b.getCurrentSpeed());
    }
    
}



==================================  Vehicle ==============================
public class Vehicle {
    private String name;
    private int currentSpeed;
    private int currentDirection;
    
    public Vehicle (String name) {
        this.name = name;
        this.currentSpeed = 0;
        this.currentDirection = 0;
    }



    public void steer (int direction) {
        this.currentDirection += direction;
        System.out.println("Steer method called: Steering at "+currentDirection+ " degrees.");
    }

    public void move(int speed, int direction) {
        currentSpeed = speed;
        currentDirection = direction;
        System.out.println("move method called: Moving at "+currentSpeed + "in direction "+ currentDirection);
    }

    
    public void stop() {
        this.currentSpeed = 0;
        System.out.println("Vehicle is stopped");
    }


    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getCurrentSpeed() {
        return currentSpeed;
    }

    public void setCurrentSpeed(int currentSpeed) {
        this.currentSpeed = currentSpeed;
    }

    public int getCurrentDirection() {
        return currentDirection;
    }

    public void setCurrentDirection (int currentDirection) {
        this.currentDirection = currentDirection;
    }
    
}

======================== Car============================================

public class Vehicle {
    private String name;
    private int currentSpeed;
    private int currentDirection;
    
    public Vehicle (String name) {
        this.name = name;
        this.currentSpeed = 0;
        this.currentDirection = 0;
    }



    public void steer (int direction) {
        this.currentDirection += direction;
        System.out.println("Steer method called: Steering at "+currentDirection+ " degrees.");
    }

    public void move(int speed, int direction) {
        currentSpeed = speed;
        currentDirection = direction;
        System.out.println("move method called: Moving at "+currentSpeed + "in direction "+ currentDirection);
    }

    
    public void stop() {
        this.currentSpeed = 0;
        System.out.println("Vehicle is stopped");
    }


    
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getCurrentSpeed() {
        return currentSpeed;
    }

    public void setCurrentSpeed(int currentSpeed) {
        this.currentSpeed = currentSpeed;
    }

    public int getCurrentDirection() {
        return currentDirection;
    }

    public void setCurrentDirection (int currentDirection) {
        this.currentDirection = currentDirection;
    }
    
}
======================== BMW ============================================
public class Bmw extends Car {

    public Bmw(String name, boolean isManual) {
        super(name, 4,  4, 6, isManual, "BMW");
    }

    public void accelerate (int rate) {
        int newSpeed = getCurrentSpeed() + rate; 
        /**
        * speed = 0: gear 1
        * speed 0  - 10  : gear 2
        * speed 10 - 20  : gear 3
        * speed 20 - 30  : gear 4
        * speed 30 - 50  : gear 5
        * speed 50 - 70  : gear 6
        */
        if (newSpeed == 0) {
        stop();
        changeGear(1);
        } else if (newSpeed > 0  && newSpeed <= 10) { changeGear(2);
        } else if (newSpeed > 10 && newSpeed <= 20) { changeGear (3);
        } else if (newSpeed > 20 && newSpeed <= 30) { changeGear(4);
        } else if (newSpeed > 30 && newSpeed <= 50) { changeGear(5);
        } else if (newSpeed > 50 && newSpeed <= 70) { changeGear(6);
        } else { changeGear (6);
            if (newSpeed > 0) {
            changeSpeed (newSpeed, getCurrentDirection());
            }
        }

    }

}




-
