Date: 18 Oct 2024


Objective: 
    - Register a student with a list and setter.
    - Register a teacher with a list and setter.
    - To receive Fees from Students,  Pay salaries to Teachers, and Calculate final Income. (School, Teacher and Student Class)

Use of : 
    00. ArrayList as Data Type and Parameter
    01. List, 
    02. Static Method from one class to another



===================================== With Database ======================================================


CREATE TABLE students (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    grade INT,
    yearly_fee INT,
    paid_fee INT
);

CREATE TABLE teachers (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    salary INT,
    received_salary INT
);

CREATE TABLE transactions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    type ENUM('fee', 'salary'),
    amount INT,
    date DATE,
    student_id INT,
    teacher_id INT,
    FOREIGN KEY (student_id) REFERENCES students(id),
    FOREIGN KEY (teacher_id) REFERENCES teachers(id) Â  

);

---------------------------------

import java.sql.*;

public class SchoolManagement {
    private Connection connection;

    public SchoolManagement(String url, String username, String password) throws SQLException {
        connection = DriverManager.getConnection(url, username, password);
    }

    public void addStudent(Student student) throws SQLException {
        // ... (insert into students table)
    }

    public void addTeacher(Teacher teacher) throws SQLException {
        // ... (insert into teachers table)
    }

    public void recordFeePayment(int studentId, int amount) throws SQLException {
        // ... (insert into transactions table with type 'fee')
    }

    public void recordSalaryPayment(int teacherId, int amount) throws SQLException {
        // ... (insert into transactions table with type 'salary')
    }

    public int calculateAnnualIncome() throws SQLException {
        int totalIncome = 0;
        // Use SQL query to calculate total income from transactions table
        String query = "SELECT SUM(amount) FROM transactions WHERE type = 'fee'";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                totalIncome += resultSet.getInt(1);
            }
        }

        // Subtract total salary paid
        query = "SELECT SUM(amount) FROM transactions WHERE type = 'salary'";
        try (PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                totalIncome -= resultSet.getInt(1);
            }
        }

        return totalIncome;
    }

    // ... other methods for retrieving, updating, and deleting data
}





===================================== Without Database ========================================




------------------------------- Main Class (Caller Class) -----------------------------
/*
How to register a Student with List and Setter as well?
How to register a Teacher with List and Setter as well?
*/ 


public class Main {
    public static void main(String[] args) throws Exception {
        Student labib    = new Student(1,"Muhammad Labib Hasan", 1);
        Student mehjabin = new Student(2,"Mehjabin Binte Hasan", 3);
        Student samin    = new Student(3,"Samin", 2);
        
        List<Student> students= new ArrayList<>();
        students.add(labib);
        students.add(mehjabin);
        students.add(samin);        
        
        
        Teacher mizan  = new Teacher(1,"Md. Mizanur Rahman", 600);
        Teacher mahadi = new Teacher(2,"Muhammad Mahadi Hasan", 300);
        Teacher shafi  = new Teacher(3,"Md. Shafiullah ", 200);
        
        List<Teacher> teachers= new ArrayList<>();
        teachers.add(mizan);
        teachers.add(mahadi);
        teachers.add(shafi);
        
        School school = new School(teachers, students);
        
        Teacher nahid = new Teacher(3,"Md. Nahid ", 250);
        school.setTeacher(nahid);
        
        Student turin = new Student(3,"Turin", 2);
        school.setStudent(turin);


        //Pay Teacher's Salary
        mizan.setReceivedSalary(2500);
        mahadi.setReceivedSalary(100);

        //Received Students Fees
        turin.setPaidFee(500);
        samin.setPaidFee(300);

        // System.out.println("Total Fees Received: "+school.getReceivedFees());
        // System.out.println("Total Salary Paid: "+school.getPaidSalary());
        // System.out.println("Total Income: "+school.getIncome());

        System.out.println(school.getTeachers());
        // System.out.println(school.getStudents());
       
    
    }
}

========================================== School ==============================================

public class School {
    private List<Teacher> teachers;
    private List<Student> students;
    private static int receivedFees;
    private static int paidSalary;

    public School(List<Teacher> teachers, List<Student> students) {
        this.teachers = teachers;
        this.students = students;    
    }

    public List<Teacher> getTeachers() {  return teachers; }
    public void setTeacher(Teacher teacher) {  teachers.add(teacher);}

    public List<Student> getStudents() {  return students; }
    public void setStudent(Student student) {  students.add(student); }
    
    public int getReceivedFees() { return receivedFees; }
    public static void setReceivedFees(int fees) {   receivedFees += fees;  }

    public int getPaidSalary() {  return paidSalary; }    
    public static void setpaidSalary(int pSalary) {  paidSalary += pSalary; }

    public int getIncome(){return receivedFees - paidSalary;}

}

========================================== Teacher ==============================================
public class Teacher {    
    private int id;
    private String name;
    private int salary;
    private int receivedSalary;
    
    public Teacher(int id, String name, int salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
        this.receivedSalary=0;
    }

//Pay Salary and store info it to Student and Teacher Class
    public void setReceivedSalary(int recSalary) {
        receivedSalary = recSalary;
        School.setpaidSalary(recSalary);
    }

    public int getId() { return id;   }   
    public String getName() { return name;   }

    public int getSalary() {  return salary; }
    public int getReceivedSalary() { return salary - receivedSalary; }

    public String toString(){
        return "Teacher Name: "+name + ", Salary: Tk."+receivedSalary+" \n" ;
    }

}

========================================== Student ==============================================
public class Student {
    private int id;
    private String name;
    private int grad;
    private int yearlyFee =3000;
    private int paidFee;

    public Student(int id, String name, int grad) {
        this.id = id;
        this.name = name;
        this.grad = grad;
        this.paidFee=0;
    }

    //Receive fee and store it to Student and School Class
    public void setPaidFee(int pFee) {
        this.paidFee += pFee;
        School.setReceivedFees(paidFee);
    }

    public int getId(){ return id; }
    public String getName(){ return name; }

    public int getPaidFee(){ return paidFee; }
    public int getUnpaidFee(){ return yearlyFee - paidFee; }

    public String toString(){
        return "Student Name: "+name +", Grad: "+grad + ",\n";
    }
    
}






-
